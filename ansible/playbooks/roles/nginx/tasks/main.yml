- name: Update package list
  ansible.builtin.apt:
    update_cache: yes

- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    state: present

- name: Install Certbot
  ansible.builtin.apt:
    name: certbot
    state: present
    update_cache: yes

- name: Stop Nginx before issuing SSL
  ansible.builtin.systemd:
    name: nginx
    state: stopped
  ignore_errors: true


# sonarqube Certificate

- name: Obtain Sonarqube SSL Certificate
  ansible.builtin.command:
    cmd: certbot certonly --standalone -d {{ sonarqube_domain }} --preferred-challenges http --agree-tos -m {{ email }} --keep-until-expiring
  register: certbot_result
  changed_when: "'Certificate not yet due for renewal' not in certbot_result.stdout"

- name: Copy sonarqube.conf to Nginx conf.d
  template:
    src: sonarqube.conf.j2  
    dest: /etc/nginx/conf.d/sonarqube.conf
    owner: root
    group: root
    mode: '0644'

- name: Replace proxy address in Nginx config
  ansible.builtin.replace:
    path: /etc/nginx/conf.d/sonarqube.conf
    regexp: 'proxy_pass https://192.168.100.100:9000;'
    replace: "proxy_pass {{ sonarqube_host }};"


# portainer Certificate

- name: Obtain Portainer SSL Certificate
  ansible.builtin.command:
    cmd: certbot certonly --standalone -d {{ portainer_domain }} --preferred-challenges http --agree-tos -m {{ email }} --keep-until-expiring
  register: certbot_result
  changed_when: "'Certificate not yet due for renewal' not in certbot_result.stdout"

- name: Copy portainer.conf to Nginx conf.d
  template:
    src: portainer.conf.j2  
    dest: /etc/nginx/conf.d/portainer.conf
    owner: root
    group: root
    mode: '0644'

- name: Replace proxy address in Nginx config
  ansible.builtin.replace:
    path: /etc/nginx/conf.d/portainer.conf
    regexp: 'proxy_pass https://192.168.100.100:9000;'
    replace: "proxy_pass {{ portainer_host }};"


# harbor Certificate

- name: Obtain Harbor SSL Certificate
  ansible.builtin.command:
    cmd: certbot certonly --standalone -d {{ harbor_domain }} --preferred-challenges http --agree-tos -m {{ email }} --keep-until-expiring
  register: certbot_result
  changed_when: "'Certificate not yet due for renewal' not in certbot_result.stdout"

- name: Copy harbor.conf to Nginx conf.d
  template:
    src: harbor.conf.j2  
    dest: /etc/nginx/conf.d/harbor.conf
    owner: root
    group: root
    mode: '0644'

- name: Replace proxy address in Nginx config
  ansible.builtin.replace:
    path: /etc/nginx/conf.d/harbor.conf
    regexp: 'proxy_pass https://192.168.100.100:443;'
    replace: "proxy_pass {{ harbor_host }};"

- name: Download fullchain.pem from remote
  fetch:
    src: /etc/letsencrypt/live/harbor.lptdevops.website/fullchain.pem  
    dest: /tmp/harbor/fullchain.pem  
    flat: yes 


- name: Download privkey.pem from remote
  fetch:
    src: /etc/letsencrypt/live/harbor.lptdevops.website/privkey.pem  
    dest: /tmp/harbor/privkey.pem  
    flat: yes 


# jenkins Certificate

- name: Obtain Jfrog SSL Certificate
  ansible.builtin.command:
    cmd: certbot certonly --standalone -d {{ jenkins_domain }} --preferred-challenges http --agree-tos -m {{ email }} --keep-until-expiring
  register: certbot_result
  changed_when: "'Certificate not yet due for renewal' not in certbot_result.stdout"

- name: Copy jenkins.conf to Nginx conf.d
  template:
    src: jenkins.conf.j2  
    dest: /etc/nginx/conf.d/jenkins.conf
    owner: root
    group: root
    mode: '0644'

- name: Replace proxy address in Nginx config
  ansible.builtin.replace:
    path: /etc/nginx/conf.d/jenkins.conf
    regexp: 'proxy_pass https://192.168.100.100:8080;'
    replace: "proxy_pass {{ jenkins_host }};"


# onlineshop Certificate

- name: Obtain onlineshop SSL Certificate
  ansible.builtin.command:
    cmd: certbot certonly --standalone -d {{ onlineshop_domain }} --preferred-challenges http --agree-tos -m {{ email }} --keep-until-expiring
  register: certbot_result
  changed_when: "'Certificate not yet due for renewal' not in certbot_result.stdout"

- name: Copy onlineshop.conf to Nginx conf.d
  template:
    src: onlineshop.conf.j2  
    dest: /etc/nginx/conf.d/onlineshop.conf
    owner: root
    group: root
    mode: '0644'

- name: Replace proxy address in Nginx config
  ansible.builtin.replace:
    path: /etc/nginx/conf.d/onlineshop.conf
    regexp: 'proxy_pass https://192.168.100.100:8080;'
    replace: "proxy_pass {{ onlineshop_host }};"


- name: Start Nginx after SSL issuance
  ansible.builtin.systemd:
    name: nginx
    state: started
    enabled: yes
